Index: src/com/bridgelabz/addressbook/AddressBook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bridgelabz.addressbook;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Scanner;\r\nimport java.util.stream.Collectors;\r\n\r\n\r\npublic class AddressBook {\r\n    // array list created\r\n    public ArrayList<Contact> contactList = new ArrayList<>();\r\n    // hash map created -  name, city and state\r\n    public static Map<String, Contact> nameHashMap = new HashMap<>();\r\n    public static Map<String, Contact> cityHashMap = new HashMap<>();\r\n    public static Map<String, Contact> stateHashMap = new HashMap<>();\r\n\r\n    public boolean addContact(Contact contact) {\r\n        List<Contact> checkByName = searchByName(contact.getFirstName());\r\n        for (Contact equalName : checkByName)\r\n            if (equalName.equals(contact))\r\n                return false;\r\n        contactList.add(contact);\r\n        return true;\r\n    }\r\n    // searching contacts by first name\r\n    public List<Contact> searchByName(String name) {\r\n        return contactList.stream().filter(person -> person.getFirstName().equalsIgnoreCase(name))\r\n                .collect(Collectors.toList());\r\n    }\r\n    // searching contact by city\r\n    public List<Contact> searchByCity(String city) {\r\n        return contactList.stream().filter(person -> person.getCity().equalsIgnoreCase(city))\r\n                .collect(Collectors.toList());\r\n    }\r\n    // searching contacts by state\r\n    public List<Contact> searchByState(String state) {\r\n        return contactList.stream().filter(person -> person.getState().equalsIgnoreCase(state))\r\n                .collect(Collectors.toList());\r\n    }\r\n    public static void viewByName(Map<String, Contact> nameHashMap) {\r\n        nameHashMap.entrySet().stream().forEach(e -> System.out.println(e.getKey() + \"=\" + e.getValue().toString()));\r\n    }\r\n\r\n    public static void viewByCity(Map<String, Contact> cityHashMap) {\r\n        cityHashMap.entrySet().stream().forEach(e -> System.out.println(e.getKey() + \"=\" + e.getValue().toString()));\r\n    }\r\n\r\n    public static void viewByState(Map<String, Contact> stateHashMap) {\r\n        stateHashMap.entrySet().stream().forEach(e -> System.out.println(e.getKey() + \"=\" + e.getValue().toString()));\r\n    }\r\n\r\n    public void editContact(Contact current, Contact edit) {\r\n        if (!contactList.contains(current))\r\n            return;\r\n        contactList.remove(current);\r\n        contactList.add(edit);\r\n    }\r\n\r\n    public void deleteContact(Contact contacts) {\r\n        contactList.remove(contacts);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        if (contactList.isEmpty())\r\n            return \"No contacts found!\";\r\n        StringBuilder result = new StringBuilder();\r\n        for (Contact contacts : contactList) {\r\n            result.append(\" \").append(contacts);\r\n        }\r\n        return result.toString();\r\n    }\r\n    // adding a contact method\r\n    public static Contact readContact() {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.print(\"Enter First Name: \");\r\n        String firstName = sc.nextLine();\r\n        System.out.print(\"Enter Last Name: \");\r\n        String lastName = sc.nextLine();\r\n        System.out.print(\"Enter Address: \");\r\n        String address = sc.nextLine();\r\n        System.out.print(\"Enter City: \");\r\n        String city = sc.nextLine();\r\n        System.out.print(\"Enter State: \");\r\n        String state = sc.nextLine();\r\n        System.out.print(\"Enter Zip Code: \");\r\n        String zip = sc.next();\r\n        sc.nextLine();\r\n        System.out.print(\"Enter Phone Number: \");\r\n        String phoneNumber = sc.next();\r\n        sc.nextLine();\r\n        System.out.print(\"Enter Email ID: \");\r\n        String email = sc.nextLine();\r\n        return new Contact(firstName, lastName, address, city, state, zip, phoneNumber, email);\r\n    }\r\n\r\n    public static void addressBookOptions(AddressBook addressBook) {\r\n        Scanner sc = new Scanner(System.in);\r\n        while (true) {\r\n            System.out.println(\"\\n-------------------------- Address Book Contact Option --------------------------\");\r\n            System.out.println(\"1. Add contact details\");\r\n            System.out.println(\"2. Edit contact details\");\r\n            System.out.println(\"3. Delete contact details\");\r\n            System.out.println(\"4. Show contacts details\");\r\n            System.out.println(\"5. Back to main menu\");\r\n            System.out.print(\"Enter Your choice: \");\r\n            int choice = sc.nextInt();\r\n            // taking user input what user want to\r\n            sc.nextLine();\r\n            switch (choice) {\r\n                case 1:\r\n                    if (addressBook.addContact(readContact()))\r\n                        System.out.println(\"Contact Added Successfully\");\r\n                    else\r\n                        System.out.println(\"Contact Already Exists\");\r\n                    break;\r\n                case 2:\r\n                    System.out.print(\"Enter First name: \");\r\n                    String name = sc.nextLine();\r\n                    List<Contact> equalName = addressBook.searchByName(name);\r\n                    if (equalName.isEmpty())\r\n                        System.out.println(\"Data Not Found\");\r\n                    else if (equalName.size() == 1) {\r\n                        addressBook.editContact(equalName.get(0), readContact());\r\n\r\n                        System.out.println(\"Contact data modified\");\r\n                    } else {\r\n                        equalName.forEach(x -> System.out.println(equalName.indexOf(x) + \"  \" + x.toString()));\r\n                        System.out.print(\"Enter index to edit: \");\r\n                        int i = sc.nextInt();\r\n                        sc.nextLine();\r\n                        addressBook.editContact(equalName.get(i), readContact());\r\n                        System.out.println(\"Contact Modified\");\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    System.out.print(\"Enter First name to delete contact: \");\r\n                    name = sc.nextLine();\r\n                    equalName = addressBook.searchByName(name);\r\n                    if (equalName.isEmpty())\r\n                        System.out.println(\"Data Not Found\");\r\n                    else if (equalName.size() == 1) {\r\n                        addressBook.deleteContact(equalName.get(0));\r\n                        System.out.println(\"Contact data deleted\");\r\n                    } else {\r\n                        equalName.forEach(x -> System.out.println(equalName.indexOf(x) + \"  \" + x.toString()));\r\n                        System.out.print(\"Enter an index : \");\r\n                        int index = sc.nextInt();\r\n                        sc.nextLine();\r\n                        addressBook.deleteContact(equalName.get(index));\r\n                        System.out.println(\"Contact data deleted\");\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    System.out.println(addressBook.toString());\r\n                    break;\r\n                case 5:\r\n                    return;\r\n                default:\r\n                    System.out.println(\"Invalid Choice!\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // searching methods, taking user input through which user want to search\r\n    public void searchByOptions() {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"1.By name\");\r\n        System.out.println(\"2.By city\");\r\n        System.out.println(\"3.By state\");\r\n        System.out.println(\"4.Back\");\r\n        System.out.print(\"Your choice: \");\r\n        int choice = sc.nextInt();\r\n        sc.nextLine();\r\n        switch (choice) {\r\n            case 1:\r\n                System.out.print(\"Enter name: \");\r\n                String name = sc.nextLine();\r\n                contactList.forEach(book -> searchByName(name).forEach(System.out::println));\r\n                break;\r\n            case 2:\r\n                System.out.print(\"Enter city: \");\r\n                String city = sc.nextLine();\r\n                contactList.forEach(book -> searchByCity(city).forEach(System.out::println));\r\n                break;\r\n            case 3:\r\n                System.out.print(\"Enter state: \");\r\n                String state = sc.nextLine();\r\n                contactList.forEach(book -> searchByState(state).forEach(System.out::println));\r\n                break;\r\n            case 4:\r\n                return;\r\n            default:\r\n                System.out.println(\"INVALID CHOICE!\");\r\n        }\r\n    }\r\n\r\n    // display method view by options\r\n    public static void viewByOption() {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"1. View By name\");\r\n        System.out.println(\"2. View By city\");\r\n        System.out.println(\"3. View By state\");\r\n        System.out.println(\"4. Back\");\r\n        System.out.print(\"Enter Your choice: \");\r\n        int choice = sc.nextInt();\r\n        sc.nextLine();\r\n        switch (choice) {\r\n            case 1:\r\n                viewByName(nameHashMap);\r\n                break;\r\n            case 2:\r\n                viewByCity(cityHashMap);\r\n                break;\r\n            case 3:\r\n                viewByState(stateHashMap);\r\n                break;\r\n            case 4:\r\n                return;\r\n            default:\r\n                System.out.println(\"INVALID CHOICE!\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/bridgelabz/addressbook/AddressBook.java b/src/com/bridgelabz/addressbook/AddressBook.java
--- a/src/com/bridgelabz/addressbook/AddressBook.java	(revision 9a11792731d4b05affcbedeaa4ae2c7836bba189)
+++ b/src/com/bridgelabz/addressbook/AddressBook.java	(date 1666091999785)
@@ -25,9 +25,11 @@
         return true;
     }
     // searching contacts by first name
+
     public List<Contact> searchByName(String name) {
         return contactList.stream().filter(person -> person.getFirstName().equalsIgnoreCase(name))
                 .collect(Collectors.toList());
+
     }
     // searching contact by city
     public List<Contact> searchByCity(String city) {
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1666088920943)
+++ b/.idea/modules.xml	(date 1666088920943)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/address-book.iml" filepath="$PROJECT_DIR$/address-book.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: address-book.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/address-book.iml b/address-book.iml
new file mode 100644
--- /dev/null	(date 1666088920895)
+++ b/address-book.iml	(date 1666088920895)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1666092259601)
+++ b/.idea/workspace.xml	(date 1666092259601)
@@ -0,0 +1,212 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="cba94b62-30d6-40a0-8a57-f34ba2b29e3d" name="Changes" comment="[Himanshu] : added code for sort alphabetically">
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/address-book.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/bridgelabz/addressbook/AddressBook.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/bridgelabz/addressbook/AddressBook.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="UC8_Searching_person" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectId" id="2G8gavOBdIrgR8X8LQYZz9bFJG2" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="1" id="Add" />
+  </component>
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "last_opened_file_path": "E:/JAVA BL/Address Book",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0"
+  }
+}]]></component>
+  <component name="RunManager" selected="Application.AddressBookMain">
+    <configuration name="AddressBook" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.bridgelabz.addressbook.AddressBook" />
+      <module name="address-book" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.bridgelabz.addressbook.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="AddressBookMain" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.bridgelabz.addressbook.AddressBookMain" />
+      <module name="address-book" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.bridgelabz.addressbook.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.AddressBookMain" />
+        <item itemvalue="Application.AddressBook" />
+        <item itemvalue="Application.AddressBookMain" />
+        <item itemvalue="Application.AddressBook" />
+        <item itemvalue="Application.AddressBook" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="cba94b62-30d6-40a0-8a57-f34ba2b29e3d" name="Changes" comment="" />
+      <created>1665775695053</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1665775695053</updated>
+    </task>
+    <task id="LOCAL-00001" summary="[Himanshu] : Initial Commit">
+      <created>1665776206864</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1665776206864</updated>
+    </task>
+    <task id="LOCAL-00002" summary="[Himanshu] : Created an AddressBook">
+      <created>1665776288826</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1665776288826</updated>
+    </task>
+    <task id="LOCAL-00003" summary="[Himanshu] : refactored the code to add a contact to AddressBook">
+      <created>1665776745087</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1665776745087</updated>
+    </task>
+    <task id="LOCAL-00004" summary="[Himanshu] : Refactored the code to edit a contact">
+      <created>1665777061478</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1665777061478</updated>
+    </task>
+    <task id="LOCAL-00005" summary="[Himanshu] : added code to delete a contact using first name">
+      <created>1665777493684</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1665777493684</updated>
+    </task>
+    <task id="LOCAL-00006" summary="[Himanshu] : added code to add multiple person to AddressBook">
+      <created>1665777910627</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1665777910627</updated>
+    </task>
+    <task id="LOCAL-00007" summary="[Himanshu] : refactored code to add multiple addressbook">
+      <created>1665778856415</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1665778856416</updated>
+    </task>
+    <task id="LOCAL-00008" summary="[Himanshu] :  added code to ensure no Duplicate entry of the same person in particular Addressbook">
+      <created>1665779493882</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1665779493882</updated>
+    </task>
+    <task id="LOCAL-00009" summary="[Himanshu] : added code to search a person through name, city or state across multiple addressbook">
+      <created>1665942337551</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1665942337551</updated>
+    </task>
+    <task id="LOCAL-00010" summary="[Himanshu] : added code to display a person by name city or state">
+      <created>1665943658801</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1665943658801</updated>
+    </task>
+    <task id="LOCAL-00011" summary="[Himanshu] : added code to display a person by name city or State">
+      <created>1665944588796</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1665944588796</updated>
+    </task>
+    <task id="LOCAL-00012" summary="[Himanshu] : added code for sort alphabetically">
+      <created>1665945729327</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1665945729327</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
+    <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="[Himanshu] : Initial Commit" />
+    <MESSAGE value="[Himanshu] : Created an AddressBook" />
+    <MESSAGE value="[Himanshu] : refactored the code to add a contact to AddressBook" />
+    <MESSAGE value="[Himanshu] : Refactored the code to edit a contact" />
+    <MESSAGE value="[Himanshu] : added code to delete a contact using first name" />
+    <MESSAGE value="[Himanshu] : added code to add multiple person to AddressBook" />
+    <MESSAGE value="[Himanshu] : refactored code to add multiple addressbook" />
+    <MESSAGE value="[Himanshu] :  added code to ensure no Duplicate entry of the same person in particular Addressbook" />
+    <MESSAGE value="[Himanshu] : added code to search a person through name, city or state across multiple addressbook" />
+    <MESSAGE value="[Himanshu] : added code to display a person by name city or state" />
+    <MESSAGE value="[Himanshu] : added code to display a person by name city or State" />
+    <MESSAGE value="[Himanshu] : added code for sort alphabetically" />
+    <option name="LAST_COMMIT_MESSAGE" value="[Himanshu] : added code for sort alphabetically" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1666088920974)
+++ b/.idea/misc.xml	(date 1666088920974)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" default="true" project-jdk-name="16" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1666088921021)
+++ b/.idea/vcs.xml	(date 1666088921021)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
